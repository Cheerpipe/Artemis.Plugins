<UserControl x:Class="Artemis.Plugins.Modules.LeagueOfLegends.Views.CustomView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:viewModels="clr-namespace:Artemis.Plugins.Modules.LeagueOfLegends.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance viewModels:CustomViewModel}">
    <Grid Margin="15">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="100" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock TextWrapping="Wrap" Grid.Row="0" Grid.ColumnSpan="2">
            This is one of the views of your module. Each view gets its own tab in the UI. <LineBreak />
            How you create your view is entirely up to you, you may use the Visual Studio designer or write XAML yourself. <LineBreak /><LineBreak />
            However, keep in mind that Artemis uses the Material Design In XAML library and their Demo App is full of great examples.
        </TextBlock>

        <TextBox Grid.Row="1" Grid.Column="0" Text="{Binding TestString}" Height="Auto" VerticalAlignment="Center" />
        <!-- We use a command to point the button to our TestNumberAction method -->
        <Button Grid.Row="1" Grid.Column="1" Margin="15" Content="SHOW DIALOG" Command="{s:Action TestPopupAction}" />

        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center">
            <Run Text="The current value of TestInt is: "/>
            <Run Text="{Binding TestNumber}"/>
        </TextBlock>
        <!-- We use a command to point the button to our TestNumberAction method -->
        <Button Grid.Row="2" Grid.Column="1" Margin="15" Content="INCREMENT" Command="{s:Action TestNumberAction}" />
    </Grid>
</UserControl>